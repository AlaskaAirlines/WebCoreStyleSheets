// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

// sass-lint:disable mixins-before-declarations variable-for-property no-vendor-prefixes

@import 'libSupport/manageScope';


/// Standard breakpoint to support resolutions greater than 1232px.
/// This mixin is to be deprecated during the next major release.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grid-breakpoints";
/// @group grid
/// @example scss - Set grid-breakpoint
///   .foo {
///       @include auro_grid-breakpoint--xl {
///         ...
///       }
///   }
@mixin auro_grid-breakpoint--xl {
  @media screen and (min-width: $auro-grid-breakpoint-xl) {
    @content;
  }
}

/// Standard breakpoint to support resolutions greater than 1024px.
/// This mixin is to be deprecated during the next major release.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grid-breakpoints";
/// @group grid
/// @example scss - Set grid-breakpoint
///   .foo {
///       @include auro_grid-breakpoint--lg {
///         ...
///       }
///   }
@mixin auro_grid-breakpoint--lg {
  @media screen and (min-width: $auro-grid-breakpoint-lg) {
    @content;
  }
}

/// Standard breakpoint to support resolutions greater than 768px.
/// This mixin is to be deprecated during the next major release.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grid-breakpoints";
/// @group grid
/// @example scss - Set grid-breakpoint
///   .foo {
///       @include auro_grid-breakpoint--md {
///         ...
///       }
///   }
@mixin auro_grid-breakpoint--md {
  @media screen and (min-width: $auro-grid-breakpoint-md) {
    @content;
  }
}

/// Standard breakpoint to support resolutions greater than 576px.
/// This mixin is to be deprecated during the next major release.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grid-breakpoints";
/// @group grid
/// @example scss - Set grid-breakpoint
///   .foo {
///       @include auro_grid-breakpoint--sm {
///         ...
///       }
///   }
@mixin auro_grid-breakpoint--sm {
  @media screen and (min-width: $auro-grid-breakpoint-sm) {
    @content;
  }
}

/// Standard breakpoint to support resolutions greater than 320px.
/// This mixin is to be deprecated during the next major release.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grid-breakpoints";
/// @group grid
/// @example scss - Set grid-breakpoint
///   .foo {
///       @include auro_grid-breakpoint--xs {
///         ...
///       }
///   }
@mixin auro_grid-breakpoint--xs {
  @media screen and (min-width: $auro-grid-breakpoint-xs) {
    @content;
  }
}


/// @group grid
/// @param {string} $maxWidth [1232px] - Specifies the max-width value of the grid.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
/// @example scss - import mixin file with altered output values prior to import
///   $maxWidth: $auro-grid-breakpoint-xl !default;
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
/// 
@mixin grid_width($maxWidth) {
  max-width: $maxWidth;
}

/// @group grid
/// @param {string} $margin [auto] - Specifies the margin value of the grid.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
/// @example scss - import mixin file with altered output values prior to import
///   $margin: $auro-grid-margin-xs !default;
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
@mixin grid_margin($margin) {
  margin: $margin;
}

/// @group grid
/// @param {string} $gutter [16px] - Specifies the gutter/gap(horizontal & vertical spacing) value between each cell of the grid.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
/// @example scss - import mixin file with altered output values prior to import
///   $gutter: $auro-grid-gutter-xs !default;
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
@mixin grid_gutter($gutter) {
  gap: $gutter;
}


/// @group grid
/// @param {string} $first - Specifies the percentage/ratio value for the first column of the 2 column grid.
/// @param {string} $second - Specifies the percentage/ratio value for the first column of the 2 column grid.
/// @example scss - import mixin file
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
/// @example scss - import mixin file with altered output values prior to import
///   $first: 3fr !default;
///   $second: 1fr !default;
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
@mixin grid_ratio($first, $second) {
  grid-template-columns: $first $second;
}


/// Grid class
///
/// [Manage](/#scope-prefix-variable) `$scope` and `$prefix` options.
/// @group grid
/// @example scss - Default selector(s)
///   .grid {}
///
/// @example scss - Selector(s) when $scope: true;
///   .auro .grid {}
///
/// @example scss - Selector(s) when $prefix: true;
///   .auro_grid {}
///
/// @example html - Example HTML selector use
///   <element class="grid"> ... </element>
/// @example scss - import file;
///   @import "./node_modules/@aurodesignsystem/webcorestylesheets/dist/grids";
///
#{$scope}.#{$prefix}grid {
  display: grid;
  @include grid_width($auro-grid-breakpoint-xl);
  @include grid_margin($auro-grid-margin-xs);
  @include grid_gutter($auro-grid-gutter-xs);

  &.grid-cols-2 {
    
    grid-template-columns: auto;

    @include auro_grid-breakpoint--sm {
      grid-template-columns: repeat(auto-fit, minmax(2rem, 1fr));
    }

    &.grid-sidenav {

      grid-template-areas: 
        "sidenavarea"
        "breadcrumbarea"
        "contentarea";

      > :first-child {
        grid-area: sidenavarea;
        position: sticky;
        top: 0;
        --align-self: stretch;
        align-self: var(--align-self); 
      }

      > :nth-child(2) {
        grid-area: breadcrumbarea;
      }

      > :nth-child(3) {
        grid-area: contentarea;
      }

      > :nth-child(n+4) {
        display: none;
      }

      @include auro_grid-breakpoint--md {
        grid-template-areas: 
        "breadcrumbarea breadcrumbarea"
        "sidenavarea contentarea";
        grid-template-columns: $auro-grid-breakpoint-xs auto;
      }
    }
  }
}
